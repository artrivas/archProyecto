$date
	Wed Jul 12 02:40:11 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! WriteData [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 # DataAdr [31:0] $end
$var reg 1 $ clk $end
$var reg 1 % reset $end
$scope module dut $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 & WriteData [31:0] $end
$var wire 32 ' ReadData [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 1 " MemWrite $end
$var wire 32 ) Instr [31:0] $end
$var wire 32 * DataAdr [31:0] $end
$scope module arm $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 + WriteData [31:0] $end
$var wire 1 , StallF $end
$var wire 1 - StallD $end
$var wire 1 . RegWriteW $end
$var wire 1 / RegWriteM $end
$var wire 2 0 RegSrc [1:0] $end
$var wire 32 1 ReadData [31:0] $end
$var wire 1 2 PCWrPendingF $end
$var wire 1 3 PCSrcW $end
$var wire 32 4 PC [31:0] $end
$var wire 1 5 MemtoRegW $end
$var wire 1 6 MemtoRegE $end
$var wire 1 " MemWrite $end
$var wire 1 7 Match_2E_W $end
$var wire 1 8 Match_2E_M $end
$var wire 1 9 Match_1E_W $end
$var wire 1 : Match_1E_M $end
$var wire 1 ; Match_12D_E $end
$var wire 32 < InstrD [31:0] $end
$var wire 32 = Instr [31:0] $end
$var wire 2 > ImmSrc [1:0] $end
$var wire 2 ? ForwardBE [1:0] $end
$var wire 2 @ ForwardAE [1:0] $end
$var wire 1 A FlushE $end
$var wire 1 B FlushD $end
$var wire 1 C BranchTakenE $end
$var wire 1 D ALUSrc $end
$var wire 32 E ALUResult [31:0] $end
$var wire 4 F ALUFlags [3:0] $end
$var wire 2 G ALUControl [1:0] $end
$scope module c $end
$var wire 20 H Instr [31:12] $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 . RegWriteW $end
$var wire 1 / RegWriteM $end
$var wire 1 I RegWriteE $end
$var wire 1 J RegWriteD $end
$var wire 1 K RegWriteBM $end
$var wire 2 L RegSrcD [1:0] $end
$var wire 1 2 PCWrPendingF $end
$var wire 1 3 PCSrcW $end
$var wire 1 M PCSrcM $end
$var wire 1 N PCSrcE $end
$var wire 1 O PCSE $end
$var wire 1 P PCSD $end
$var wire 1 5 MemtoRegW $end
$var wire 1 Q MemtoRegM $end
$var wire 1 6 MemtoRegE $end
$var wire 1 R MemtoRegD $end
$var wire 1 " MemWriteM $end
$var wire 1 S MemWriteE $end
$var wire 1 T MemWriteD $end
$var wire 1 U MemWriteBM $end
$var wire 2 V ImmSrcD [1:0] $end
$var wire 1 A FlushE $end
$var wire 4 W FlagsE [3:0] $end
$var wire 2 X FlagWriteE [1:0] $end
$var wire 2 Y FlagWriteD [1:0] $end
$var wire 4 Z CondE [3:0] $end
$var wire 1 C BranchTakenE $end
$var wire 1 [ BranchE $end
$var wire 1 \ BranchD $end
$var wire 1 D ALUSrcE $end
$var wire 1 ] ALUSrcD $end
$var wire 4 ^ ALUFlagsResult [3:0] $end
$var wire 4 _ ALUFlags [3:0] $end
$var wire 2 ` ALUControlE [1:0] $end
$var wire 2 a ALUControlD [1:0] $end
$scope module ModAluControlE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 2 b d [1:0] $end
$var reg 2 c q [1:0] $end
$upscope $end
$scope module ModAluSrcE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 ] d $end
$var reg 1 D q $end
$upscope $end
$scope module ModBranchE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 \ d $end
$var reg 1 [ q $end
$upscope $end
$scope module ModCondE $end
$var wire 1 $ clk $end
$var wire 4 d d [3:0] $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var reg 4 e q [3:0] $end
$upscope $end
$scope module ModFlagWriteE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 2 f d [1:0] $end
$var reg 2 g q [1:0] $end
$upscope $end
$scope module ModFlagsE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 4 h d [3:0] $end
$var reg 4 i q [3:0] $end
$upscope $end
$scope module ModMemWriteE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 T d $end
$var reg 1 S q $end
$upscope $end
$scope module ModMemWriteM $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 U d $end
$var reg 1 " q $end
$upscope $end
$scope module ModMemtoRegE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 R d $end
$var reg 1 6 q $end
$upscope $end
$scope module ModMemtoregM $end
$var wire 1 $ clk $end
$var wire 1 6 d $end
$var wire 1 % reset $end
$var reg 1 Q q $end
$upscope $end
$scope module ModPCSE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 P d $end
$var reg 1 O q $end
$upscope $end
$scope module ModPCSrcM $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 N d $end
$var reg 1 M q $end
$upscope $end
$scope module ModRegMemtoRegW $end
$var wire 1 $ clk $end
$var wire 1 Q d $end
$var wire 1 % reset $end
$var reg 1 5 q $end
$upscope $end
$scope module ModRegPCSrcW $end
$var wire 1 $ clk $end
$var wire 1 M d $end
$var wire 1 % reset $end
$var reg 1 3 q $end
$upscope $end
$scope module ModRegWriteE $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 1 J d $end
$var reg 1 I q $end
$upscope $end
$scope module ModRegWriteM $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 K d $end
$var reg 1 / q $end
$upscope $end
$scope module ModRegWriteW $end
$var wire 1 $ clk $end
$var wire 1 / d $end
$var wire 1 % reset $end
$var reg 1 . q $end
$upscope $end
$scope module cl $end
$var wire 1 [ Branch $end
$var wire 1 C BranchTakenE $end
$var wire 4 j Cond [3:0] $end
$var wire 2 k FlagW [1:0] $end
$var wire 4 l FlagsE [3:0] $end
$var wire 1 S MemW $end
$var wire 1 U MemWrite $end
$var wire 1 O PCS $end
$var wire 1 N PCSrc $end
$var wire 1 I RegW $end
$var wire 1 K RegWrite $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 m FlagWrite $end
$var wire 1 n CondEx $end
$var wire 4 o ALUFlagsResult [3:0] $end
$var wire 4 p ALUFlags [3:0] $end
$scope module Flags_first $end
$var wire 2 q d0 [1:0] $end
$var wire 2 r d1 [1:0] $end
$var wire 1 s s $end
$var wire 2 t y [1:0] $end
$upscope $end
$scope module Flags_second $end
$var wire 2 u d0 [1:0] $end
$var wire 2 v d1 [1:0] $end
$var wire 1 w s $end
$var wire 2 x y [1:0] $end
$upscope $end
$scope module cc $end
$var wire 4 y Cond [3:0] $end
$var wire 4 z Flags [3:0] $end
$var wire 1 { ge $end
$var wire 1 | zero $end
$var wire 1 } overflow $end
$var wire 1 ~ neg $end
$var wire 1 !" carry $end
$var reg 1 n CondEx $end
$upscope $end
$upscope $end
$scope module dec $end
$var wire 6 "" Funct [5:0] $end
$var wire 2 #" Op [1:0] $end
$var wire 1 P PCS $end
$var wire 4 $" Rd [3:0] $end
$var wire 1 J RegW $end
$var wire 2 %" RegSrc [1:0] $end
$var wire 1 R MemtoReg $end
$var wire 1 T MemW $end
$var wire 2 &" ImmSrc [1:0] $end
$var wire 1 \ Branch $end
$var wire 1 ] ALUSrc $end
$var wire 1 '" ALUOp $end
$var reg 2 (" ALUControl [1:0] $end
$var reg 2 )" FlagW [1:0] $end
$var reg 10 *" controls [9:0] $end
$upscope $end
$upscope $end
$scope module dp $end
$var wire 2 +" ALUControlE [1:0] $end
$var wire 1 D ALUSrcE $end
$var wire 1 C BranchTakenE $end
$var wire 2 ," ImmSrcD [1:0] $end
$var wire 1 5 MemtoRegW $end
$var wire 1 3 PCSrcW $end
$var wire 2 -" RegSrcD [1:0] $end
$var wire 1 . RegWriteW $end
$var wire 1 $ clk $end
$var wire 1 ." n_clk $end
$var wire 1 % reset $end
$var wire 32 /" WriteDataM [31:0] $end
$var wire 32 0" WriteDataE [31:0] $end
$var wire 32 1" WriteDataD [31:0] $end
$var wire 4 2" WA3W [3:0] $end
$var wire 4 3" WA3M [3:0] $end
$var wire 4 4" WA3E [3:0] $end
$var wire 1 , StallF $end
$var wire 1 - StallD $end
$var wire 32 5" SrcBE [31:0] $end
$var wire 32 6" SrcAE [31:0] $end
$var wire 32 7" SrcAD [31:0] $end
$var wire 32 8" ResultW [31:0] $end
$var wire 32 9" ReadDataW [31:0] $end
$var wire 32 :" ReadDataM [31:0] $end
$var wire 32 ;" RD2E [31:0] $end
$var wire 32 <" RD1E [31:0] $end
$var wire 4 =" RA2E [3:0] $end
$var wire 4 >" RA2 [3:0] $end
$var wire 4 ?" RA1E [3:0] $end
$var wire 4 @" RA1 [3:0] $end
$var wire 32 A" PCPlusNext [31:0] $end
$var wire 32 B" PCPlus4F8D [31:0] $end
$var wire 32 C" PCNext [31:0] $end
$var wire 32 D" PCF [31:0] $end
$var wire 1 7 Match_2E_W $end
$var wire 1 8 Match_2E_M $end
$var wire 1 9 Match_1E_W $end
$var wire 1 : Match_1E_M $end
$var wire 1 ; Match_12D_E $end
$var wire 32 E" InstrF [31:0] $end
$var wire 32 F" InstrD [31:0] $end
$var wire 2 G" ForwardBE [1:0] $end
$var wire 2 H" ForwardAE [1:0] $end
$var wire 1 A FlushE $end
$var wire 1 B FlushD $end
$var wire 32 I" ExtImmE [31:0] $end
$var wire 32 J" ExtImmD [31:0] $end
$var wire 32 K" ALUResultE [31:0] $end
$var wire 32 L" ALUOutW [31:0] $end
$var wire 32 M" ALUOutM [31:0] $end
$var wire 4 N" ALUFlags [3:0] $end
$scope module ForwardAEMux $end
$var wire 32 O" y [31:0] $end
$var wire 2 P" s [1:0] $end
$var wire 32 Q" d2 [31:0] $end
$var wire 32 R" d1 [31:0] $end
$var wire 32 S" d0 [31:0] $end
$upscope $end
$scope module ForwardBEMux $end
$var wire 32 T" y [31:0] $end
$var wire 2 U" s [1:0] $end
$var wire 32 V" d2 [31:0] $end
$var wire 32 W" d1 [31:0] $end
$var wire 32 X" d0 [31:0] $end
$upscope $end
$scope module PcOrAluResult $end
$var wire 1 C s $end
$var wire 32 Y" y [31:0] $end
$var wire 32 Z" d1 [31:0] $end
$var wire 32 [" d0 [31:0] $end
$upscope $end
$scope module RA1ERet $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 4 \" d [3:0] $end
$var reg 4 ]" q [3:0] $end
$upscope $end
$scope module RA2ERet $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 4 ^" d [3:0] $end
$var reg 4 _" q [3:0] $end
$upscope $end
$scope module RegALUOutM $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 `" d [31:0] $end
$var reg 32 a" q [31:0] $end
$upscope $end
$scope module RegAlu $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 b" d [31:0] $end
$var reg 32 c" q [31:0] $end
$upscope $end
$scope module RegExtend $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 32 d" d [31:0] $end
$var reg 32 e" q [31:0] $end
$upscope $end
$scope module RegInsr $end
$var wire 1 $ clk $end
$var wire 1 f" en0 $end
$var wire 1 % reset $end
$var wire 1 B en1 $end
$var wire 32 g" d [31:0] $end
$var reg 32 h" q [31:0] $end
$upscope $end
$scope module RegRD1 $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 32 i" d [31:0] $end
$var reg 32 j" q [31:0] $end
$upscope $end
$scope module RegRD2 $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var wire 32 k" d [31:0] $end
$var reg 32 l" q [31:0] $end
$upscope $end
$scope module RegReadData $end
$var wire 1 $ clk $end
$var wire 1 % reset $end
$var wire 32 m" d [31:0] $end
$var reg 32 n" q [31:0] $end
$upscope $end
$scope module RegWA3E $end
$var wire 1 $ clk $end
$var wire 4 o" d [3:0] $end
$var wire 1 % reset $end
$var wire 1 A en $end
$var reg 4 p" q [3:0] $end
$upscope $end
$scope module RegWA3M $end
$var wire 1 $ clk $end
$var wire 4 q" d [3:0] $end
$var wire 1 % reset $end
$var reg 4 r" q [3:0] $end
$upscope $end
$scope module RegWA3W $end
$var wire 1 $ clk $end
$var wire 4 s" d [3:0] $end
$var wire 1 % reset $end
$var reg 4 t" q [3:0] $end
$upscope $end
$scope module RegWriteDataM $end
$var wire 1 $ clk $end
$var wire 32 u" d [31:0] $end
$var wire 1 % reset $end
$var reg 32 v" q [31:0] $end
$upscope $end
$scope module alu $end
$var wire 2 w" ALUControl [1:0] $end
$var wire 32 x" SrcA [31:0] $end
$var wire 1 y" carry $end
$var wire 1 z" overflow $end
$var wire 1 {" zero $end
$var wire 33 |" sum [32:0] $end
$var wire 1 }" neg $end
$var wire 32 ~" SrcB [31:0] $end
$var wire 4 !# ALUFlags [3:0] $end
$var reg 32 "# ALUResult [31:0] $end
$upscope $end
$scope module ext $end
$var wire 2 ## ImmSrc [1:0] $end
$var wire 24 $# Instr [23:0] $end
$var reg 32 %# ExtImm [31:0] $end
$upscope $end
$scope module pcadd $end
$var wire 32 &# b [31:0] $end
$var wire 32 '# y [31:0] $end
$var wire 32 (# a [31:0] $end
$upscope $end
$scope module pcmux $end
$var wire 32 )# d0 [31:0] $end
$var wire 1 3 s $end
$var wire 32 *# y [31:0] $end
$var wire 32 +# d1 [31:0] $end
$upscope $end
$scope module pcreg $end
$var wire 1 $ clk $end
$var wire 32 ,# d [31:0] $end
$var wire 1 -# en $end
$var wire 1 % reset $end
$var reg 32 .# q [31:0] $end
$upscope $end
$scope module ra1mux $end
$var wire 4 /# d0 [3:0] $end
$var wire 4 0# d1 [3:0] $end
$var wire 1 1# s $end
$var wire 4 2# y [3:0] $end
$upscope $end
$scope module ra2mux $end
$var wire 4 3# d0 [3:0] $end
$var wire 4 4# d1 [3:0] $end
$var wire 1 5# s $end
$var wire 4 6# y [3:0] $end
$upscope $end
$scope module resmux $end
$var wire 32 7# d0 [31:0] $end
$var wire 32 8# d1 [31:0] $end
$var wire 1 5 s $end
$var wire 32 9# y [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ." clk $end
$var wire 32 :# r15 [31:0] $end
$var wire 4 ;# ra1 [3:0] $end
$var wire 4 <# ra2 [3:0] $end
$var wire 4 =# wa3 [3:0] $end
$var wire 32 ># wd3 [31:0] $end
$var wire 1 . we3 $end
$var wire 32 ?# rd2 [31:0] $end
$var wire 32 @# rd1 [31:0] $end
$upscope $end
$scope module srcbmux $end
$var wire 32 A# d0 [31:0] $end
$var wire 32 B# d1 [31:0] $end
$var wire 1 D s $end
$var wire 32 C# y [31:0] $end
$upscope $end
$upscope $end
$scope module hU $end
$var wire 1 C BranchTakenE $end
$var wire 1 B FlushD $end
$var wire 1 A FlushE $end
$var wire 1 D# LDRstall $end
$var wire 1 ; Match_12D_E $end
$var wire 1 : Match_1E_M $end
$var wire 1 9 Match_1E_W $end
$var wire 1 8 Match_2E_M $end
$var wire 1 7 Match_2E_W $end
$var wire 1 6 MemtoRegE $end
$var wire 1 3 PCSrcW $end
$var wire 1 2 PCWrPendingF $end
$var wire 1 / RegWriteM $end
$var wire 1 . RegWriteW $end
$var wire 1 - StallD $end
$var wire 1 , StallF $end
$var reg 2 E# ForwardAE [1:0] $end
$var reg 2 F# ForwardBE [1:0] $end
$upscope $end
$upscope $end
$scope module dmem $end
$var wire 32 G# a [31:0] $end
$var wire 1 $ clk $end
$var wire 32 H# rd [31:0] $end
$var wire 32 I# wd [31:0] $end
$var wire 1 " we $end
$upscope $end
$scope module imem $end
$var wire 32 J# a [31:0] $end
$var wire 32 K# rd [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b11100000010011110000000000001111 K#
b0 J#
b0 I#
bx H#
b0 G#
b0 F#
b0 E#
0D#
b0 C#
b0 B#
b0 A#
bx @#
bx ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b100 :#
b0 9#
b0 8#
b0 7#
b0 6#
05#
b0 4#
b0 3#
b0 2#
01#
b1111 0#
b0 /#
b0 .#
1-#
b100 ,#
b0 +#
b100 *#
b100 )#
b0 (#
b100 '#
b100 &#
b0 %#
b0 $#
b0 ##
b0 "#
b100 !#
b0 ~"
0}"
b0 |"
1{"
0z"
0y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
bx m"
b0 l"
bx k"
b0 j"
bx i"
b0 h"
b11100000010011110000000000001111 g"
1f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
b0 ]"
b0 \"
b100 ["
b0 Z"
b100 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b100 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b11100000010011110000000000001111 E"
b0 D"
b100 C"
b100 B"
b100 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
bx :"
b0 9"
b0 8"
bx 7"
b0 6"
b0 5"
b0 4"
b0 3"
b0 2"
bx 1"
b0 0"
b0 /"
0."
b0 -"
b0 ,"
b0 +"
b1001 *"
b0 )"
b10 ("
1'"
b0 &"
b0 %"
b0 $"
b0 #"
b0 ""
0!"
0~
0}
0|
1{
b0 z
b0 y
b0 x
0w
b0 v
b0 u
b0 t
0s
b1 r
b0 q
b100 p
b0 o
0n
0m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b10 b
b10 a
b0 `
b100 _
b0 ^
0]
0\
0[
b0 Z
b0 Y
b0 X
b0 W
b0 V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
b0 L
0K
1J
0I
b0 H
b0 G
b100 F
b0 E
0D
0C
0B
0A
b0 @
b0 ?
b0 >
b11100000010011110000000000001111 =
b0 <
0;
1:
19
18
17
06
05
b0 4
03
02
bx 1
b0 0
0/
0.
0-
0,
b0 +
b0 *
b11100000010011110000000000001111 )
b0 (
bx '
b0 &
1%
1$
b0 #
0"
b0 !
$end
#5
1."
0$
#10
0."
1$
#15
1."
0$
#20
0."
1$
#22
0%
#25
1."
0$
#30
x}"
bx r
bx00 F
bx00 _
bx00 p
bx00 N"
bx00 !#
x{"
bx K"
bx Z"
bx b"
bx "#
bx 5"
bx ~"
bx C#
b1000 1"
b1000 k"
b1000 ?#
b1000 7"
b1000 i"
b1000 @#
b1 a
b1 b
b1 ("
bx 0"
bx T"
bx u"
bx A#
bx |"
bx 6"
bx O"
bx x"
b1111 J"
b1111 d"
b1111 %#
b1111 >"
b1111 ^"
b1111 6#
b1111 <#
0;
b1111 @"
b1111 \"
b1111 2#
b1111 ;#
b100 ""
b1110 d
b1000 C"
b1000 Y"
b1000 ,#
b10011110000000000001111 $#
b1111 3#
b1111 /#
b11100000010011110000 H
b11100010010011110001000000000001 )
b11100010010011110001000000000001 =
b11100010010011110001000000000001 E"
b11100010010011110001000000000001 g"
b11100010010011110001000000000001 K#
b1000 A"
b1000 ["
b1000 *#
bx 9"
bx n"
bx 8#
bx ;"
bx X"
bx l"
bx <"
bx S"
bx j"
b11100000010011110000000000001111 <
b11100000010011110000000000001111 F"
b11100000010011110000000000001111 h"
b1000 B"
b1000 '#
b1000 )#
b1000 :#
b100 (
b100 4
b100 D"
b100 (#
b100 .#
b100 J#
b10 G
b10 `
b10 c
b10 +"
b10 w"
1I
0."
1$
#35
1."
0$
#40
0}"
b1 r
1{"
b0 K"
b0 Z"
b0 b"
b0 "#
b0 |"
b0 v
0z"
1]
b100 F
b100 _
b100 p
b100 N"
b100 !#
0y"
b101001 *"
b1000 5"
b1000 ~"
b1000 C#
1K
b1100 C"
b1100 Y"
b1100 ,#
b1 J"
b1 d"
b1 %#
b1 >"
b1 ^"
b1 6#
b1 <#
b100100 ""
b1 $"
b1000 6"
b1000 O"
b1000 x"
b1000 0"
b1000 T"
b1000 u"
b1000 A#
1n
b11100010010011110010000000000010 )
b11100010010011110010000000000010 =
b11100010010011110010000000000010 E"
b11100010010011110010000000000010 g"
b11100010010011110010000000000010 K#
b1100 A"
b1100 ["
b1100 *#
b1100 7"
b1100 i"
b1100 @#
bx 1"
bx k"
bx ?#
b10011110001000000000001 $#
b1 o"
b1 4#
b1 3#
b11100010010011110001 H
b1 G
b1 `
b1 c
b1 +"
b1 w"
b1110 Z
b1110 e
b1110 j
b1110 y
b1100 B"
b1100 '#
b1100 )#
b1100 :#
b1000 (
b1000 4
b1000 D"
b1000 (#
b1000 .#
b1000 J#
b11100010010011110001000000000001 <
b11100010010011110001000000000001 F"
b11100010010011110001000000000001 h"
b1000 <"
b1000 S"
b1000 j"
b1000 ;"
b1000 X"
b1000 l"
b1111 I"
b1111 e"
b1111 B#
bx #
bx *
bx E
bx M"
bx Q"
bx V"
bx `"
bx c"
bx G#
bx !
bx &
bx +
bx /"
bx v"
bx I#
09
0:
b1111 ?"
b1111 ]"
07
08
b1111 ="
b1111 _"
0."
1$
#45
1."
0$
#50
b0 r
b0 F
b0 _
b0 p
b0 N"
b0 !#
0{"
b1011 K"
b1011 Z"
b1011 b"
b1011 "#
bx 0"
bx T"
bx u"
bx A#
b1011 |"
b1100 6"
b1100 O"
b1100 x"
b10 J"
b10 d"
b10 %#
b10 >"
b10 ^"
b10 6#
b10 <#
b10 $"
b10000 C"
b10000 Y"
b10000 ,#
bx 8"
bx R"
bx W"
bx +#
bx 9#
bx >#
b10011110010000000000010 $#
b10 o"
b10 4#
b10 3#
b11100010010011110010 H
b11100010100000000011000000000010 )
b11100010100000000011000000000010 =
b11100010100000000011000000000010 E"
b11100010100000000011000000000010 g"
b11100010100000000011000000000010 K#
b10000 A"
b10000 ["
b10000 *#
b10000 7"
b10000 i"
b10000 @#
b1 5"
b1 ~"
b1 C#
b1 ="
b1 _"
bx L"
bx a"
bx 7#
b1000 !
b1000 &
b1000 +
b1000 /"
b1000 v"
b1000 I#
b0 #
b0 *
b0 E
b0 M"
b0 Q"
b0 V"
b0 `"
b0 c"
b0 G#
b1 I"
b1 e"
b1 B#
0;
b1 4"
b1 p"
b1 q"
bx ;"
bx X"
bx l"
b1100 <"
b1100 S"
b1100 j"
b11100010010011110010000000000010 <
b11100010010011110010000000000010 F"
b11100010010011110010000000000010 h"
b10000 B"
b10000 '#
b10000 )#
b10000 :#
b1100 (
b1100 4
b1100 D"
b1100 (#
b1100 .#
b1100 J#
1/
1D
0."
1$
#55
1."
0$
#60
b0 a
b0 b
b0 ("
b1110 K"
b1110 Z"
b1110 b"
b1110 "#
b10100 C"
b10100 Y"
b10100 ,#
b0 @"
b0 \"
b0 2#
b0 ;#
b101000 ""
b11 $"
b1110 |"
b10000 6"
b10000 O"
b10000 x"
b11100010100000000101000000000001 )
b11100010100000000101000000000001 =
b11100010100000000101000000000001 E"
b11100010100000000101000000000001 g"
b11100010100000000101000000000001 K#
b10100 A"
b10100 ["
b10100 *#
bx 7"
bx i"
bx @#
b100000000011000000000010 $#
b11 o"
b11 4#
b0 /#
b11100010100000000011 H
b10 5"
b10 ~"
b10 C#
b0 8"
b0 R"
b0 W"
b0 +#
b0 9#
b0 >#
1.
b10100 B"
b10100 '#
b10100 )#
b10100 :#
b10000 (
b10000 4
b10000 D"
b10000 (#
b10000 .#
b10000 J#
b11100010100000000011000000000010 <
b11100010100000000011000000000010 F"
b11100010100000000011000000000010 h"
b10000 <"
b10000 S"
b10000 j"
1;
b10 4"
b10 p"
b10 q"
b10 I"
b10 e"
b10 B#
b1011 #
b1011 *
b1011 E
b1011 M"
b1011 Q"
b1011 V"
b1011 `"
b1011 c"
b1011 G#
bx !
bx &
bx +
bx /"
bx v"
bx I#
b1 3"
b1 r"
b1 s"
b0 L"
b0 a"
b0 7#
b10 ="
b10 _"
0."
1$
#65
b0 7"
b0 i"
b0 @#
1."
0$
#70
b1110 0"
b1110 T"
b1110 u"
b1110 A#
b10 K"
b10 Z"
b10 b"
b10 "#
b0 6"
b0 O"
b0 x"
b1 J"
b1 d"
b1 %#
b1 >"
b1 ^"
b1 6#
b1 <#
b101 $"
b11000 C"
b11000 Y"
b11000 ,#
b10 |"
b1011 8"
b1011 R"
b1011 W"
b1011 +#
b1011 9#
b1011 >#
b10 ?
b10 G"
b10 U"
b10 F#
b100000000101000000000001 $#
b101 o"
b101 4#
b1 3#
b11100010100000000101 H
b11100000100000010100000000000010 )
b11100000100000010100000000000010 =
b11100000100000010100000000000010 E"
b11100000100000010100000000000010 g"
b11100000100000010100000000000010 K#
b11000 A"
b11000 ["
b11000 *#
b0 ?"
b0 ]"
b1 2"
b1 t"
b1 =#
b1011 L"
b1011 a"
b1011 7#
18
b10 3"
b10 r"
b10 s"
b1110 #
b1110 *
b1110 E
b1110 M"
b1110 Q"
b1110 V"
b1110 `"
b1110 c"
b1110 G#
0;
b11 4"
b11 p"
b11 q"
b0 <"
b0 S"
b0 j"
b11100010100000000101000000000001 <
b11100010100000000101000000000001 F"
b11100010100000000101000000000001 h"
b11000 B"
b11000 '#
b11000 )#
b11000 :#
b10100 (
b10100 4
b10100 D"
b10100 (#
b10100 .#
b10100 J#
b0 G
b0 `
b0 c
b0 +"
b0 w"
0."
1$
#75
b1011 1"
b1011 k"
b1011 ?#
1."
0$
#80
0]
bx 1"
bx k"
bx ?#
b1011 7"
b1011 i"
b1011 @#
b1001 *"
b1 K"
b1 Z"
b1 b"
b1 "#
b11100 C"
b11100 Y"
b11100 ,#
b10 J"
b10 d"
b10 %#
b10 >"
b10 ^"
b10 6#
b10 <#
b1 @"
b1 \"
b1 2#
b1 ;#
b1000 ""
b100 $"
b1 |"
b11100000010001000010000000000011 )
b11100000010001000010000000000011 =
b11100000010001000010000000000011 E"
b11100000010001000010000000000011 g"
b11100000010001000010000000000011 K#
b11100 A"
b11100 ["
b11100 *#
b100000010100000000000010 $#
b100 o"
b100 4#
b10 3#
b1 /#
b11100000100000010100 H
b1 5"
b1 ~"
b1 C#
b1011 0"
b1011 T"
b1011 u"
b1011 A#
b1110 8"
b1110 R"
b1110 W"
b1110 +#
b1110 9#
b1110 >#
b0 ?
b0 G"
b0 U"
b0 F#
b11100 B"
b11100 '#
b11100 )#
b11100 :#
b11000 (
b11000 4
b11000 D"
b11000 (#
b11000 .#
b11000 J#
b11100000100000010100000000000010 <
b11100000100000010100000000000010 F"
b11100000100000010100000000000010 h"
b1011 ;"
b1011 X"
b1011 l"
b101 4"
b101 p"
b101 q"
b1 I"
b1 e"
b1 B#
b10 #
b10 *
b10 E
b10 M"
b10 Q"
b10 V"
b10 `"
b10 c"
b10 G#
b1110 !
b1110 &
b1110 +
b1110 /"
b1110 v"
b1110 I#
b11 3"
b11 r"
b11 s"
b1110 L"
b1110 a"
b1110 7#
b10 2"
b10 t"
b10 =#
07
08
b1 ="
b1 _"
0."
1$
#85
b1110 1"
b1110 k"
b1110 ?#
1."
0$
#90
bx 1"
bx k"
bx ?#
bx 7"
bx i"
bx @#
b1 a
b1 b
b1 ("
b11001 K"
b11001 Z"
b11001 b"
b11001 "#
b1110 0"
b1110 T"
b1110 u"
b1110 A#
b1011 6"
b1011 O"
b1011 x"
b11 J"
b11 d"
b11 %#
b11 >"
b11 ^"
b11 6#
b11 <#
1;
b100 @"
b100 \"
b100 2#
b100 ;#
b100 ""
b10 $"
b100000 C"
b100000 Y"
b100000 ,#
b11001 |"
b10 8"
b10 R"
b10 W"
b10 +#
b10 9#
b10 >#
b10001000010000000000011 $#
b10 o"
b10 4#
b11 3#
b100 /#
b11100000010001000010 H
b11100101100000000100000000000100 )
b11100101100000000100000000000100 =
b11100101100000000100000000000100 E"
b11100101100000000100000000000100 g"
b11100101100000000100000000000100 K#
b100000 A"
b100000 ["
b100000 *#
b1110 5"
b1110 ~"
b1110 C#
b10 ="
b10 _"
b1 ?"
b1 ]"
b11 2"
b11 t"
b11 =#
b10 L"
b10 a"
b10 7#
b101 3"
b101 r"
b101 s"
b1011 !
b1011 &
b1011 +
b1011 /"
b1011 v"
b1011 I#
b1 #
b1 *
b1 E
b1 M"
b1 Q"
b1 V"
b1 `"
b1 c"
b1 G#
b10 I"
b10 e"
b10 B#
b100 4"
b100 p"
b100 q"
b1110 ;"
b1110 X"
b1110 l"
b1011 <"
b1011 S"
b1011 j"
b11100000010001000010000000000011 <
b11100000010001000010000000000011 F"
b11100000010001000010000000000011 h"
b100000 B"
b100000 '#
b100000 )#
b100000 :#
b11100 (
b11100 4
b11100 D"
b11100 (#
b11100 .#
b11100 J#
0D
0."
1$
#95
b10 1"
b10 k"
b10 ?#
1."
0$
#100
15#
b10 0
b10 L
b10 %"
b10 -"
b1 >
b1 V
b1 &"
b1 ,"
b1 ##
1]
1R
0J
1T
0'"
bx 1"
bx k"
bx ?#
b0 7"
b0 i"
b0 @#
b0 a
b0 b
b0 ("
b1001110100 *"
b10111 K"
b10111 Z"
b10111 b"
b10111 "#
b10 5"
b10 ~"
b10 C#
b100100 C"
b100100 Y"
b100100 ,#
b100 J"
b100 d"
b100 %#
b100 >"
b100 ^"
b100 6#
b100 <#
b0 @"
b0 \"
b0 2#
b0 ;#
b1 #"
b11000 ""
b100 $"
b10111 |"
b11001 6"
b11001 O"
b11001 x"
b10 0"
b10 T"
b10 u"
b10 A#
b11100010100000110011000000000001 )
b11100010100000110011000000000001 =
b11100010100000110011000000000001 E"
b11100010100000110011000000000001 g"
b11100010100000110011000000000001 K#
b100100 A"
b100100 ["
b100100 *#
b100000000100000000000100 $#
b100 o"
b100 4#
b100 3#
b0 /#
b11100101100000000100 H
b10 @
b10 H"
b10 P"
b10 E#
b1 8"
b1 R"
b1 W"
b1 +#
b1 9#
b1 >#
b1 G
b1 `
b1 c
b1 +"
b1 w"
b100100 B"
b100100 '#
b100100 )#
b100100 :#
b100000 (
b100000 4
b100000 D"
b100000 (#
b100000 .#
b100000 J#
b11100101100000000100000000000100 <
b11100101100000000100000000000100 F"
b11100101100000000100000000000100 h"
bx <"
bx S"
bx j"
b10 ;"
b10 X"
b10 l"
0;
b10 4"
b10 p"
b10 q"
b11 I"
b11 e"
b11 B#
b11001 #
b11001 *
b11001 E
b11001 M"
b11001 Q"
b11001 V"
b11001 `"
b11001 c"
b11001 G#
b1110 !
b1110 &
b1110 +
b1110 /"
b1110 v"
b1110 I#
1:
b100 3"
b100 r"
b100 s"
b1 L"
b1 a"
b1 7#
b101 2"
b101 t"
b101 =#
b100 ?"
b100 ]"
07
b11 ="
b11 _"
0."
1$
#105
1."
0$
#110
05#
b0 0
b0 L
b0 %"
b0 -"
b0 >
b0 V
b0 &"
b0 ,"
b0 ##
0R
1J
0T
1'"
b1011 1"
b1011 k"
b1011 ?#
b10 7"
b10 i"
b10 @#
b101001 *"
1-#
b11001 0"
b11001 T"
b11001 u"
b11001 A#
b1 J"
b1 d"
b1 %#
b1 >"
b1 ^"
b1 6#
b1 <#
b11 @"
b11 \"
b11 2#
b11 ;#
b0 #"
b101000 ""
b11 $"
b101000 C"
b101000 Y"
b101000 ,#
b100 K"
b100 Z"
b100 b"
b100 "#
0,
1f"
0A
b1 ?
b1 G"
b1 U"
b1 F#
b11001 8"
b11001 R"
b11001 W"
b11001 +#
b11001 9#
b11001 >#
b0 @
b0 H"
b0 P"
b0 E#
b100 |"
b0 6"
b0 O"
b0 x"
b100000110011000000000001 $#
b11 o"
b11 4#
b1 3#
b11 /#
b11100010100000110011 H
b11100101100100110100000000000100 )
b11100101100100110100000000000100 =
b11100101100100110100000000000100 E"
b11100101100100110100000000000100 g"
b11100101100100110100000000000100 K#
b101000 A"
b101000 ["
b101000 *#
b100 5"
b100 ~"
b100 C#
1U
0-
0D#
0K
17
b100 ="
b100 _"
b0 ?"
b0 ]"
09
b100 2"
b100 t"
b100 =#
b11001 L"
b11001 a"
b11001 7#
0:
b10 3"
b10 r"
b10 s"
b10 !
b10 &
b10 +
b10 /"
b10 v"
b10 I#
b10111 #
b10111 *
b10111 E
b10111 M"
b10111 Q"
b10111 V"
b10111 `"
b10111 c"
b10111 G#
b100 I"
b100 e"
b100 B#
0;
b100 4"
b100 p"
b100 q"
bx ;"
bx X"
bx l"
b0 <"
b0 S"
b0 j"
b11100010100000110011000000000001 <
b11100010100000110011000000000001 F"
b11100010100000110011000000000001 h"
b101000 B"
b101000 '#
b101000 )#
b101000 :#
b100100 (
b100100 4
b100100 D"
b100100 (#
b100100 .#
b100100 J#
1D
b0 G
b0 `
b0 c
b0 +"
b0 w"
1S
16
0I
0."
1$
#115
1."
0$
#120
b1 >
b1 V
b1 &"
b1 ,"
b1 ##
1R
0'"
b11001 1"
b11001 k"
b11001 ?#
b0 Y
b0 f
b0 )"
b0 a
b0 b
b0 ("
b1111000 *"
b11 K"
b11 Z"
b11 b"
b11 "#
b1011 0"
b1011 T"
b1011 u"
b1011 A#
b101100 C"
b101100 Y"
b101100 ,#
b100 J"
b100 d"
b100 %#
b100 >"
b100 ^"
b100 6#
b100 <#
b1 #"
b11001 ""
b100 $"
b10 6"
b10 O"
b10 x"
b11 |"
1K
0U
b11101010000000000000000000000010 )
b11101010000000000000000000000010 =
b11101010000000000000000000000010 E"
b11101010000000000000000000000010 g"
b11101010000000000000000000000010 K#
b101100 A"
b101100 ["
b101100 *#
b100100110100000000000100 $#
b100 o"
b100 4#
b100 3#
b11100101100100110100 H
b1 5"
b1 ~"
b1 C#
b10111 8"
b10111 R"
b10111 W"
b10111 +#
b10111 9#
b10111 >#
b0 ?
b0 G"
b0 U"
b0 F#
1I
06
0S
0/
1"
1Q
b101100 B"
b101100 '#
b101100 )#
b101100 :#
b101000 (
b101000 4
b101000 D"
b101000 (#
b101000 .#
b101000 J#
b11100101100100110100000000000100 <
b11100101100100110100000000000100 F"
b11100101100100110100000000000100 h"
b10 <"
b10 S"
b10 j"
b1011 ;"
b1011 X"
b1011 l"
1;
b11 4"
b11 p"
b11 q"
b1 I"
b1 e"
b1 B#
b100 #
b100 *
b100 E
b100 M"
b100 Q"
b100 V"
b100 `"
b100 c"
b100 G#
b11001 !
b11001 &
b11001 +
b11001 /"
b11001 v"
b11001 I#
b100 3"
b100 r"
b100 s"
b10111 L"
b10111 a"
b10111 7#
b10 2"
b10 t"
b10 =#
b11 ?"
b11 ]"
07
b1 ="
b1 _"
0."
1$
#125
1."
0$
#130
1B
11#
12
1P
b1 0
b1 L
b1 %"
b1 -"
b10 >
b10 V
b10 &"
b10 ,"
b10 ##
0R
0J
1\
b111 K"
b111 Z"
b111 b"
b111 "#
b10111 1"
b10111 k"
b10111 ?#
b110000 7"
b110000 i"
b110000 @#
b110100010 *"
b11 6"
b11 O"
b11 x"
0-#
b111 |"
b11001 0"
b11001 T"
b11001 u"
b11001 A#
b1000 J"
b1000 d"
b1000 %#
b10 >"
b10 ^"
b10 6#
b10 <#
b1111 @"
b1111 \"
b1111 2#
b1111 ;#
b10 #"
b100000 ""
b0 $"
b110000 C"
b110000 Y"
b110000 ,#
1,
1f"
0A
b100 5"
b100 ~"
b100 C#
b10 $#
b0 o"
b0 4#
b10 3#
b0 /#
b11101010000000000000 H
b11100000100000010010000000000011 )
b11100000100000010010000000000011 =
b11100000100000010010000000000011 E"
b11100000100000010010000000000011 g"
b11100000100000010010000000000011 K#
b110000 A"
b110000 ["
b110000 *#
bx 8"
bx R"
bx W"
bx +#
bx 9#
bx >#
b10 @
b10 H"
b10 P"
b10 E#
0-
0D#
17
b100 ="
b100 _"
b100 2"
b100 t"
b100 =#
b100 L"
b100 a"
b100 7#
1:
b11 3"
b11 r"
b11 s"
b1011 !
b1011 &
b1011 +
b1011 /"
b1011 v"
b1011 I#
b11 #
b11 *
b11 E
b11 M"
b11 Q"
b11 V"
b11 `"
b11 c"
b11 G#
b100 I"
b100 e"
b100 B#
0;
b100 4"
b100 p"
b100 q"
b11001 ;"
b11001 X"
b11001 l"
b11101010000000000000000000000010 <
b11101010000000000000000000000010 F"
b11101010000000000000000000000010 h"
b110000 B"
b110000 '#
b110000 )#
b110000 :#
b101100 (
b101100 4
b101100 D"
b101100 (#
b101100 .#
b101100 J#
15
0.
0Q
0"
1/
16
bx '
bx 1
bx :"
bx m"
bx H#
0."
1$
#135
1."
0$
#140
b0 7"
b0 i"
b0 @#
b0 @"
b0 \"
b0 2#
b0 ;#
01#
0P
b10 a
b10 b
b10 ("
b0 0
b0 L
b0 %"
b0 -"
b0 >
b0 V
b0 &"
b0 ,"
b0 ##
0]
1J
0\
1'"
b0 1"
b0 k"
b0 ?#
b1001 *"
0-#
b111000 C"
b111000 Y"
b111000 ,#
1A
b0 J"
b0 d"
b0 %#
0;
b0 >"
b0 ^"
b0 6#
b0 <#
b0 #"
b0 ""
b0 d
b10111 0"
b10111 T"
b10111 u"
b10111 A#
b111000 K"
b111000 Z"
b111000 b"
b111000 "#
1N
1,
0K
1C
b11 8"
b11 R"
b11 W"
b11 +#
b11 9#
b11 >#
b0 $#
b0 3#
b0 H
b1000 5"
b1000 ~"
b1000 C#
b11001 '
b11001 1
b11001 :"
b11001 m"
b11001 H#
b111000 |"
b110000 6"
b110000 O"
b110000 x"
b0 @
b0 H"
b0 P"
b0 E#
12
1O
0I
06
1[
1Q
1.
05
b0 <
b0 F"
b0 h"
b110000 <"
b110000 S"
b110000 j"
b10111 ;"
b10111 X"
b10111 l"
b0 4"
b0 p"
b0 q"
b1000 I"
b1000 e"
b1000 B#
b111 #
b111 *
b111 E
b111 M"
b111 Q"
b111 V"
b111 `"
b111 c"
b111 G#
b11001 !
b11001 &
b11001 +
b11001 /"
b11001 v"
b11001 I#
b100 3"
b100 r"
b100 s"
b11 L"
b11 a"
b11 7#
b11 2"
b11 t"
b11 =#
0:
b1111 ?"
b1111 ]"
07
b10 ="
b10 _"
0."
1$
#145
1."
0$
#150
b1 r
b100 F
b100 _
b100 p
b100 N"
b100 !#
1{"
b0 K"
b0 Z"
b0 b"
b0 "#
b0 0"
b0 T"
b0 u"
b0 A#
b0 6"
b0 O"
b0 x"
b0 |"
b110000 C"
b110000 Y"
b110000 ,#
0A
bx '
bx 1
bx :"
bx m"
bx H#
b11001 8"
b11001 R"
b11001 W"
b11001 +#
b11001 9#
b11001 >#
0n
b0 5"
b0 ~"
b0 C#
0C
0N
18
b0 ="
b0 _"
1:
b0 ?"
b0 ]"
b100 2"
b100 t"
b100 =#
b111 L"
b111 a"
b111 7#
b11001 9"
b11001 n"
b11001 8#
b0 3"
b0 r"
b0 s"
b10111 !
b10111 &
b10111 +
b10111 /"
b10111 v"
b10111 I#
b111000 #
b111000 *
b111000 E
b111000 M"
b111000 Q"
b111000 V"
b111000 `"
b111000 c"
b111000 G#
b0 I"
b0 e"
b0 B#
b0 ;"
b0 X"
b0 l"
b0 <"
b0 S"
b0 j"
15
0Q
0/
1M
b0 Z
b0 e
b0 j
b0 y
0D
0[
12
0O
0."
1$
#155
1."
0$
#160
1-#
b111000 C"
b111000 Y"
b111000 ,#
0,
b111000 A"
b111000 ["
b111000 *#
b111000 8"
b111000 R"
b111000 W"
b111000 +#
b111000 9#
b111000 >#
1I
b10 G
b10 `
b10 c
b10 +"
b10 w"
02
0M
13
0.
05
b0 #
b0 *
b0 E
b0 M"
b0 Q"
b0 V"
b0 `"
b0 c"
b0 G#
b0 !
b0 &
b0 +
b0 /"
b0 v"
b0 I#
bx 9"
bx n"
bx 8#
b111000 L"
b111000 a"
b111000 7#
17
19
b0 2"
b0 t"
b0 =#
0."
1$
#165
1."
0$
#170
b111100 C"
b111100 Y"
b111100 ,#
0B
b0 8"
b0 R"
b0 W"
b0 +#
b0 9#
b0 >#
b11100010100000100110000000000001 )
b11100010100000100110000000000001 =
b11100010100000100110000000000001 E"
b11100010100000100110000000000001 g"
b11100010100000100110000000000001 K#
b111100 A"
b111100 ["
b111100 *#
b0 L"
b0 a"
b0 7#
b111100 B"
b111100 '#
b111100 )#
b111100 :#
b111000 (
b111000 4
b111000 D"
b111000 (#
b111000 .#
b111000 J#
03
0."
1$
#175
1."
0$
#180
1]
b1011 1"
b1011 k"
b1011 ?#
b10111 7"
b10111 i"
b10111 @#
b0 a
b0 b
b0 ("
b101001 *"
b1000000 C"
b1000000 Y"
b1000000 ,#
b1 J"
b1 d"
b1 %#
b1 >"
b1 ^"
b1 6#
b1 <#
0;
b10 @"
b10 \"
b10 2#
b10 ;#
b101000 ""
b110 $"
b1110 d
bx )
bx =
bx E"
bx g"
bx K#
b1000000 A"
b1000000 ["
b1000000 *#
b100000100110000000000001 $#
b110 o"
b110 4#
b1 3#
b10 /#
b11100010100000100110 H
b1000000 B"
b1000000 '#
b1000000 )#
b1000000 :#
b111100 (
b111100 4
b111100 D"
b111100 (#
b111100 .#
b111100 J#
b11100010100000100110000000000001 <
b11100010100000100110000000000001 F"
b11100010100000100110000000000001 h"
0."
1$
#185
1."
0$
#190
x-#
xB
x,
0]
x2
xP
b0 r
bx 1"
bx k"
bx ?#
bx 7"
bx i"
bx @#
bx Y
bx f
bx )"
bx a
bx b
bx ("
b1001 *"
b0 F
b0 _
b0 p
b0 N"
b0 !#
0{"
b11000 K"
b11000 Z"
b11000 b"
b11000 "#
b1011 0"
b1011 T"
b1011 u"
b1011 A#
b10111 6"
b10111 O"
b10111 x"
b0xxxxxxxx J"
b0xxxxxxxx d"
b0xxxxxxxx %#
bx >"
bx ^"
bx 6#
bx <#
x;
bx @"
bx \"
bx 2#
bx ;#
bx #"
bx ""
bx $"
bx d
b1000100 C"
b1000100 Y"
b1000100 ,#
1K
b11000 |"
bx $#
bx o"
bx 4#
bx 3#
bx /#
bx H
b1000100 A"
b1000100 ["
b1000100 *#
1n
b1 5"
b1 ~"
b1 C#
07
08
b1 ="
b1 _"
09
0:
b10 ?"
b10 ]"
b1 I"
b1 e"
b1 B#
b110 4"
b110 p"
b110 q"
b1011 ;"
b1011 X"
b1011 l"
b10111 <"
b10111 S"
b10111 j"
bx <
bx F"
bx h"
b1000100 B"
b1000100 '#
b1000100 )#
b1000100 :#
b1000000 (
b1000000 4
b1000000 D"
b1000000 (#
b1000000 .#
b1000000 J#
b1110 Z
b1110 e
b1110 j
b1110 y
1D
b0 G
b0 `
b0 c
b0 +"
b0 w"
0."
1$
#195
1."
0$
#200
x{
x!"
x}
b0xx ^
b0xx h
b0xx o
b0xx z
bx x
bx v
xz"
b0xx F
b0xx _
b0xx p
b0xx N"
b0xx !#
xy"
xm
xK
bx 6"
bx O"
bx x"
bx 0"
bx T"
bx u"
bx A#
bx |"
xN
xs
xw
xn
bx 5"
bx ~"
bx C#
xO
bx G
bx `
bx c
bx +"
bx w"
0D
bx X
bx g
bx k
bx Z
bx e
bx j
bx y
1/
bx <"
bx S"
bx j"
bx ;"
bx X"
bx l"
bx 4"
bx p"
bx q"
b0xxxxxxxx I"
b0xxxxxxxx e"
b0xxxxxxxx B#
b11000 #
b11000 *
b11000 E
b11000 M"
b11000 Q"
b11000 V"
b11000 `"
b11000 c"
b11000 G#
b1011 !
b1011 &
b1011 +
b1011 /"
b1011 v"
b1011 I#
b110 3"
b110 r"
b110 s"
x9
x:
bx ?"
bx ]"
x7
x8
bx ="
bx _"
0."
1$
#205
1."
0$
#210
b11000 8"
b11000 R"
b11000 W"
b11000 +#
b11000 9#
b11000 >#
bx u
b110 2"
b110 t"
b110 =#
b11000 L"
b11000 a"
b11000 7#
bx 3"
bx r"
bx s"
bx !
bx &
bx +
bx /"
bx v"
bx I#
1.
x/
xM
b0xx W
b0xx i
b0xx l
0."
1$
#215
1."
0$
#220
b0x0xxx00 C"
b0x0xxx00 Y"
b0x0xxx00 ,#
b0x0xxx00 A"
b0x0xxx00 ["
b0x0xxx00 *#
x3
x.
bx 2"
bx t"
bx =#
0."
1$
#225
1."
0$
#230
0."
1$
#235
1."
0$
#240
0."
1$
#245
1."
0$
#250
0."
1$
#255
1."
0$
#260
0."
1$
#265
1."
0$
#270
0."
1$
#275
1."
0$
#280
0."
1$
#285
1."
0$
#290
0."
1$
#295
1."
0$
#300
0."
1$
#305
1."
0$
#310
0."
1$
#315
1."
0$
#320
0."
1$
#325
1."
0$
#330
0."
1$
#335
1."
0$
#340
0."
1$
#345
1."
0$
#350
0."
1$
#355
1."
0$
#360
0."
1$
#365
1."
0$
#370
0."
1$
#375
1."
0$
#380
0."
1$
#385
1."
0$
#390
0."
1$
#395
1."
0$
#400
0."
1$
#405
1."
0$
#410
0."
1$
#415
1."
0$
#420
0."
1$
#425
1."
0$
#430
0."
1$
#435
1."
0$
#440
0."
1$
#445
1."
0$
#450
0."
1$
#455
1."
0$
#460
0."
1$
#465
1."
0$
#470
0."
1$
#475
1."
0$
#480
0."
1$
#485
1."
0$
#490
0."
1$
#495
1."
0$
#500
0."
1$
